server:
  origin: https://self.hot6man.duckdns.org
  servlet:
    context-path: /hot6man
spring:
  application:
    name: hotsix
  cloud:
    aws:
      region:
        static: ap-northeast-2
        auto: false
  datasource:
    hikari:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://mysql-${SERVICE_NUM}:3306/ssafy?serverTimezone=UTC&useUniCode=yes&characterEncoding=UTF-8
      username: ${DB_USERNAME}
      password: ${DB_PASSWORD}
      pool-name: hikari-pool
      maximum-pool-size: 50
      minimum-idle: 50
      connection-timeout: 5000
      connection-init-sql: SELECT 1
      idle-timeout: 600000
      max-lifetime: 1800000
      auto-commit: true
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
  kafka:
    producer:
      properties:
        auto.create.topics.enable: true
  output:
    ansi:
      enabled: always
  devtools:
    restart:
      enabled: false
  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: naver
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: https://self.hot6man.duckdns.org/hot6man/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope: name, email
          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: https://self.hot6man.duckdns.org/hot6man/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope: profile, email
          github:
            client-name: github
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            redirect-uri: https://self.hot6man.duckdns.org/hot6man/login/oauth2/code/github
            authorization-grant-type: authorization_code
            scope: user, repo
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail.smtp.debug: true
      mail.smtp.connectiontimeout: 1000 #1ì´ˆ
      mail.starttls.enable: true
      mail.smtp.auth: true
client:
  host: https://self.hot6man.duckdns.org

logging:
  level:
    com:
      ssafy: debug
  pattern:
    console: '%clr(%d{HH:mm:ss} [%-5level] %c{20}.%M.%L: %m%n)'

file:
  path: C:/board/upload/
  upload-images: C:/var/www/upload-images/
  upload-files: C:/board/upload/fileUpload/
  upload-dir: C:/upload/img/

jwt:
  salt: ${JWT_SALT}
  refresh-token:
    expiretime: 2592000000
  access-token:
    expiretime: 2592000000

kafka:
  bootstrap:
    server:
      config: i11a606.p.ssafy.io:9092

aws:
  dynamodb:
    endpoint: https://dynamodb.ap-northeast-2.amazonaws.com
    region: ap-northeast-2
  accessKeyId: ${AWS_ACCESS_KEY_ID}
  secretAccessKey: ${AWS_SECRET_ACCESS_KEY}

redis:
  host: redis-${SERVICE_NUM}
  password: ""
  port: 6379

openvidu:
  url: https://i11a606.p.ssafy.io:8443
  secret: ${OPENVIDU_SECRET}

jenkins:
  url: http://i11a606.p.ssafy.io:9090/
  username: ${JENKINS_USERNAME}
  password: ${JENKINS_PASSWORD}
  token: ${JENKINS_TOKEN}

grafana:
  admin-token: ${GRAFANA_ADMIN_TOKEN}
  url: http://i11a606.p.ssafy.io:3000

sonarQube:
  admin-token: ${SONARQUBE_ADMIN_TOKEN}
  url: http://i11a606.p.ssafy.io:4093

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    url: /v3/api-docs
    path: /swagger-ui.html

DEPLOYMENT_ID: test
