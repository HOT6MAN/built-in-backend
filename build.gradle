plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'

    //querydsl 플러그인 추가
//    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    //querydsl 플러그인 추가시 gradle build 오류 발생 - 제거
//    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
dependencyManagement {
    imports {
        /** =========== DynamoDB 및 AWS CLI 의존성 시작 =======================*/
        mavenBom "software.amazon.awssdk:bom:2.26.20"
        mavenBom "io.awspring.cloud:spring-cloud-aws-dependencies:3.0.4"
        /** =========== DynamoDB 및 AWS CLI 의존성 끝 =======================*/
    }
}

springBoot {
    bootJar {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'jakarta.inject:jakarta.inject-api:2.0.1'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'


    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'


    compileOnly 'org.projectlombok:lombok'

    implementation 'com.google.code.gson:gson:2.8.9'
//    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    /** =========== DynamoDB 및 AWS CLI 의존성 시작 =======================*/
    implementation 'io.awspring.cloud:spring-cloud-aws-starter'
    implementation platform("io.awspring.cloud:spring-cloud-aws-dependencies:3.0.4")
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-sqs'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-dynamodb'
    /**  =========== DynamoDB 및 AWS CLI 의존성 끝 =======================*/

    // MySQL 의존성
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // QueryDSL 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Apache Kafka 의존성
    implementation 'org.webjars:sockjs-client:1.1.2'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework:spring-messaging'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    //openvidu 의존성
    implementation 'io.openvidu:openvidu-java-client:2.30.0'

    // Jenkins API
    implementation 'com.offbytwo.jenkins:jenkins-client:0.3.8'
    implementation group: 'io.github.cdancy', name: 'jenkins-rest', version: '1.0.2'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.json:json:20230618'
    implementation 'org.jsoup:jsoup:1.18.1'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    // Swagger
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //Test용 JUnit
    testImplementation("org.junit.vintage:junit-vintage-engine") {
        exclude group: "org.hamcrest", module: "hamcrest-core"
    }

}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('copySubmodule', Copy) {
    from './secure'
    include '*.yml'
    into './src/main/resources'
}
tasks.withType(Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}